{
  "Parameters": {
    "ProjectName": {
      "Type": "String",
      "Default": "TestProject"
    },
    "CodeBucket": {
      "Type": "String",
      "Default": "demoresourcebucket",
      "Description": "S3 bucket containing the code deployed by this template"
    }
  },
  "Resources": {
    "S3FullAccessRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "S3Access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowLogging",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3FullAccess",
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "S3BucketDeletionFunction": {
      "Properties": {
        "Code": {
          "S3Bucket": {"Fn::ImportValue": "demoresourcebucket"},
          "S3Key": "s3_bucket_deletion_function.zip"
        },
        "Description": "Function to delete the artifact bucket used for the pipeline of the project",
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "-PipelineS3BucketDeletionFunction"
            ]
          ]
        },
        "Handler": "lambda_function.handler",
        "Role": {
          "Fn::GetAtt": [
            "S3FullAccessRole",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": "30"
      },
      "Type": "AWS::Lambda::Function"
    },
    "CodePipelineBucket": {
      "Type": "AWS::S3::Bucket",
      "DependsOn": "CodeCommitRepository",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "codepipeline-",
              {
                "Ref": "ProjectName"
              },
              "-artifactbucket"
            ]
          ]
        }
      }
    },
    "CallDeleteBucketFunction": {
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "S3BucketDeletionFunction",
            "Arn"
          ]
        },
        "Bucket": {
          "Fn::Join": [
            "",
            [
              "codepipeline-",
              {
                "Ref": "ProjectName"
              },
              "-artifactbucket"
            ]
          ]
        }
      },
      "Type": "Custom::S3Objects",
      "DependsOn": "CodePipelineBucket"
    },
    "BuildProjectRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "MaxSessionDuration": 3600,
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "S3Write",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "CodeBuildAdmin",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "codebuild:*",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetRepository",
                    "codecommit:ListBranches",
                    "codecommit:ListRepositories",
                    "cloudwatch:GetMetricStatistics",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ecr:DescribeRepositories",
                    "ecr:ListImages",
                    "events:DeleteRule",
                    "events:DescribeRule",
                    "events:DisableRule",
                    "events:EnableRule",
                    "events:ListTargetsByRule",
                    "events:ListRuleNamesByTarget",
                    "events:PutRule",
                    "events:PutTargets",
                    "events:RemoveTargets",
                    "s3:GetBucketLocation",
                    "s3:ListAllMyBuckets"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "logs:DeleteLogGroup",
                    "logs:GetLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:*:*:log-group:/aws/codebuild/*:log-stream:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:PutParameter"
                  ],
                  "Resource": "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                }
              ]
            }
          },
          {
            "PolicyName": "cloudwatch-logs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowAccessToSSM",
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:PutMetricData",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "BuildRole"
            ]
          ]
        }
      }
    },
    "BuildProject": {
      "DependsOn": "BuildProjectRole",
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "Build"
            ]
          ]
        },
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/nodejs:8.11.0"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "BuildProjectRole",
            "Arn"
          ]
        },
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Source": {
          "Type": "CODEPIPELINE"
        }
      }
    },
    "CodePipeline": {
      "DependsOn": "CodePipelineBucket",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "codepipeline-",
              {
                "Ref": "ProjectName"
              }
            ]
          ]
        },
        "ArtifactStore": {
          "Location": {
            "Fn::Join": [
              "",
              [
                "codepipeline-",
                {
                  "Ref": "ProjectName"
                },
                "-artifactbucket"
              ]
            ]
          },
          "Type": "S3"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodePipelineRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1"
                },
                "Configuration": {
                  "BranchName": "master",
                  "RepositoryName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "Repo"
                      ]
                    ]
                  }
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "Build"
                      ]
                    ]
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name": "CodeBuild",
                "OutputArtifacts": [
                  {
                    "Name": "MyAppBuild"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": {
                    "Fn::GetAtt": [
                      "CodePipelineCFRole",
                      "Arn"
                    ]
                  },
                  "ChangeSetName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "ChangeSet"
                      ]
                    ]
                  },
                  "StackName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "-demo"
                      ]
                    ]
                  },
                  "TemplatePath": "MyAppBuild::outputTemplate.json"
                },
                "InputArtifacts": [
                  {
                    "Name": "MyAppBuild"
                  }
                ],
                "Name": "Staging",
                "RunOrder": 1
              }
            ],
            "Name": "Staging"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "ChangeSet"
                      ]
                    ]
                  },
                  "StackName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "-demo"
                      ]
                    ]
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "MyAppBuild"
                  }
                ],
                "Name": "Deploy",
                "RunOrder": 1
              }
            ],
            "Name": "Deploy"
          }
        ]
      },
      "Type": "AWS::CodePipeline::Pipeline"
    },
    "CodeCommitRepository": {
      "Properties": {
        "RepositoryDescription": {
          "Fn::Join": [
            "",
            [
              "Repository for codepipeline-",
              {
                "Ref": "ProjectName"
              },
              ""
            ]
          ]
        },
        "RepositoryName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "Repo"
            ]
          ]
        }
      },
      "Type": "AWS::CodeCommit::Repository"
    },
    "InvokePipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "MaxSessionDuration": 3600,
        "Path": "/service-role/",
        "Policies": [
          {
            "PolicyName": "PipelineExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "codepipeline:StartPipelineExecution"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:codepipeline:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":",
                          {
                            "Ref": "CodePipeline"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaCodeCommitRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CodeCommit_PutFile_Access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "codecommit:PutFile",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "Lambda_Logs_Policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "S3_GetObject_Access",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "CommitToRepoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "LambdaCodeCommitRole"
      ],
      "Properties": {
        "Description": "Does a commit to a CodeCommit Repository",
        "Handler": "index.lambda_handler",
        "Runtime": "python3.6",
        "Role": {
          "Fn::GetAtt": [
            "LambdaCodeCommitRole",
            "Arn"
          ]
        },
        "Timeout": 120,
        "Code": {
          "S3Bucket": {"Fn::ImportValue": "demoresourcebucket"},
          "S3Key": "init_commit_function.zip"
        }
      }
    },
    "CallCommitToRepoLambdaFunction": {
      "Type": "Custom::S3Objects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CommitToRepoLambdaFunction",
            "Arn"
          ]
        },
        "RepositoryName": {
          "Fn::GetAtt": [
            "CodeCommitRepository",
            "Name"
          ]
        },
        "BucketName": {"Fn::ImportValue": "demoresourcebucket"},
        "ContentZipName": "dtap_projectfiles.zip",
        "ProjectName": {
          "Ref": "ProjectName"
        }
      }
    },
    "CodePipelineCFRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CFCodePipelinePolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning",
                    "dynamodb:*",
                    "kms:*"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::codepipeline*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "lambda:*"
                  ],
                  "Resource": [
                    "arn:aws:lambda:region:id:function:*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "apigateway:*"
                  ],
                  "Resource": [
                    "arn:aws:apigateway:*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "iam:GetRole",
                    "iam:CreateRole",
                    "iam:DeleteRole",
                    "iam:PutRolePolicy"
                  ],
                  "Resource": [
                    "*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "iam:AttachRolePolicy",
                    "iam:DeleteRolePolicy",
                    "iam:DetachRolePolicy"
                  ],
                  "Resource": [
                    "arn:aws:iam::id:role/*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Resource": [
                    "*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "cloudformation:CreateChangeSet"
                  ],
                  "Resource": [
                    "arn:aws:cloudformation:region:aws:transform/Serverless-2016-10-31"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codedeploy:CreateApplication",
                    "codedeploy:DeleteApplication",
                    "codedeploy:RegisterApplicationRevision"
                  ],
                  "Resource": [
                    "arn:aws:codedeploy:region:id:application:*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codedeploy:CreateDeploymentGroup",
                    "codedeploy:CreateDeployment",
                    "codedeploy:GetDeployment"
                  ],
                  "Resource": [
                    "arn:aws:codedeploy:region:id:deploymentgroup:*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codedeploy:GetDeploymentConfig"
                  ],
                  "Resource": [
                    "arn:aws:codedeploy:region:id:deploymentconfig:*"
                  ],
                  "Effect": "Allow"
                }
              ],
              "Version": "2012-10-17"
            }
          }
        ]
      }
    },
    "CodePipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "PipelinePolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::codepipeline*",
                    "arn:aws:s3:::elasticbeanstalk*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codecommit:CancelUploadArchive",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetUploadArchiveStatus",
                    "codecommit:UploadArchive"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codedeploy:CreateDeployment",
                    "codedeploy:GetApplicationRevision",
                    "codedeploy:GetDeployment",
                    "codedeploy:GetDeploymentConfig",
                    "codedeploy:RegisterApplicationRevision"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "elasticbeanstalk:*",
                    "ec2:*",
                    "elasticloadbalancing:*",
                    "autoscaling:*",
                    "cloudwatch:*",
                    "s3:*",
                    "sns:*",
                    "cloudformation:*",
                    "rds:*",
                    "sqs:*",
                    "ecs:*",
                    "iam:PassRole"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "opsworks:CreateDeployment",
                    "opsworks:DescribeApps",
                    "opsworks:DescribeCommands",
                    "opsworks:DescribeDeployments",
                    "opsworks:DescribeInstances",
                    "opsworks:DescribeStacks",
                    "opsworks:UpdateApp",
                    "opsworks:UpdateStack"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "cloudformation:CreateStack",
                    "cloudformation:DeleteStack",
                    "cloudformation:DescribeStacks",
                    "cloudformation:UpdateStack",
                    "cloudformation:CreateChangeSet",
                    "cloudformation:DeleteChangeSet",
                    "cloudformation:DescribeChangeSet",
                    "cloudformation:ExecuteChangeSet",
                    "cloudformation:SetStackPolicy",
                    "cloudformation:ValidateTemplate",
                    "iam:PassRole"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "codebuild:BatchGetBuilds",
                    "codebuild:StartBuild"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "devicefarm:ListProjects",
                    "devicefarm:ListDevicePools",
                    "devicefarm:GetRun",
                    "devicefarm:GetUpload",
                    "devicefarm:CreateUpload",
                    "devicefarm:ScheduleRun"
                  ],
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            }
          }
        ]
      }
    }
  }
}
