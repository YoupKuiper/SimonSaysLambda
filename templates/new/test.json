{
  "Parameters": {
    "ProjectName": {
      "Type": "String",
      "Default": "TestProject"
    }
  },
  "Resources": {
    "YoupTestStackLambdaHelloWorldNode": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "awscodepipelinetestbucketcf",
          "S3Key": "index.js.zip"
        },
        "Description": "HTML returning Lambda function",
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "LambdaFunction"
            ]
          ]
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "YoupTestStackAPIGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "APIGateway"
            ]
          ]
        },
        "Description": "API Gateway to support NodeJS Lambda that returns HTML",
        "FailOnWarnings": true
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "YoupTestStackLambdaHelloWorldNode",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "YoupTestStackAPIGateway"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayLogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayCloudWatchLogsRole",
            "Arn"
          ]
        }
      }
    },
    "YoupTestStackAPIGatewayStage": {
      "DependsOn": [
        "ApiGatewayAccount"
      ],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "YoupTestStackAPIGatewayDeployment"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "YoupTestStackAPIGateway"
        },
        "StageName": "LATEST"
      }
    },
    "YoupTestStackAPIGatewayDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "YoupTestStackAPIGatewayMethod"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "YoupTestStackAPIGateway"
        },
        "StageName": "DummyStage"
      }
    },
    "YoupTestStackAPIGatewayMethod": {
      "DependsOn": "LambdaPermission",
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "YoupTestStackLambdaHelloWorldNode",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Content-Type": "'text/html'"
              },
              "ResponseTemplates": {
                "text/html": "$input.path('$')"
              },
              "StatusCode": "200"
            }
          ]
        },
        "RequestParameters": {
          "method.request.querystring.name": false
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "YoupTestStackAPIGateway",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "YoupTestStackAPIGateway"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Content-Type": false
            },
            "StatusCode": "200"
          }
        ]
      }
    },
    "BuildProjectRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "MaxSessionDuration": 3600,
        "Path": "/service-role/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "VisualEditor0",
                  "Effect": "Allow",
                  "Action": "s3:PutObject",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "Basic-Policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ],
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ],
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:GetObjectVersion"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:GetParameters"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "BuildRole"
            ]
          ]
        }
      }
    },
    "BuildProject": {
      "DependsOn" : "BuildProjectRole",
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "Build"
            ]
          ]
        },
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/nodejs:8.11.0"
        },
        "ServiceRole": "arn:aws:iam::835483671006:role/codebuildtestrole",
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Source": {
          "Type": "CODEPIPELINE"
        }
      }
    },
    "CodePipeline": {
      "DependsOn": "CodeCommitRepository",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "codepipeline-",
              {
                "Ref": "ProjectName"
              }
            ]
          ]
        },
        "ArtifactStore": {
          "Location": "awscodepipelinetestbucketcf",
          "Type": "S3"
        },
        "RoleArn": "arn:aws:iam::835483671006:role/AWS-CodePipeline-Service",
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1"
                },
                "Configuration": {
                  "BranchName": "master",
                  "RepositoryName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "Repo"
                      ]
                    ]
                  }
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "Build"
                      ]
                    ]
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name": "CodeBuild",
                "OutputArtifacts": [
                  {
                    "Name": "MyAppBuild"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "arn:aws:iam::835483671006:role/cloudformation-lambda-execution-role",
                  "ChangeSetName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "ChangeSet"
                      ]
                    ]
                  },
                  "StackName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "Stack"
                      ]
                    ]
                  },
                  "TemplatePath": "MyAppBuild::outputSamTemplate.yaml"
                },
                "InputArtifacts": [
                  {
                    "Name": "MyAppBuild"
                  }
                ],
                "Name": "Staging",
                "RunOrder": 1
              }
            ],
            "Name": "Staging"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "ChangeSet"
                      ]
                    ]
                  },
                  "StackName": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ProjectName"
                        },
                        "Stack"
                      ]
                    ]
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "MyAppBuild"
                  }
                ],
                "Name": "Deploy",
                "RunOrder": 1
              }
            ],
            "Name": "Deploy"
          }
        ]
      },
      "Type": "AWS::CodePipeline::Pipeline"
    },
    "CodeCommitRepository": {
      "Properties": {
        "RepositoryDescription": {
          "Fn::Join": [
            "",
            [
              "Repository for codepipeline-",
              {
                "Ref": "ProjectName"
              },
              ""
            ]
          ]
        },
        "RepositoryName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "ProjectName"
              },
              "Repo"
            ]
          ]
        }
      },
      "Type": "AWS::CodeCommit::Repository"
    },
    "CodePipelineRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "CodePipelineRule",
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "detail-type": [
            "CodeCommit Repository State Change"
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "CodeCommitRepository",
                "Arn"
              ]
            }
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "referenceType": [
              "branch"
            ],
            "referenceName": [
              "master"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:codepipeline:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "CodePipeline"
                  }
                ]
              ]
            },
            "Id": {
              "Fn::Join": [
                "",
                [
                  "codepipeline-",
                  {
                    "Ref": "ProjectName"
                  }
                ]
              ]
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "InvokePipelineRole",
                "Arn"
              ]
            }
          }
        ]
      }
    },
    "InvokePipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "MaxSessionDuration": 3600,
        "Path": "/service-role/",
        "Policies": [
          {
            "PolicyName": "TestPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "codepipeline:StartPipelineExecution"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:codepipeline:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":",
                          {
                            "Ref": "CodePipeline"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  }
}
